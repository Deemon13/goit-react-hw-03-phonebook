{"version":3,"sources":["component/Layout/Layout.js","component/Section/Section.js","component/ContactList/ContactList.js","component/ContactForm/ContactForm.js","component/Filter/Filter.js","component/App.js","index.js"],"names":["Container","styled","div","Layout","children","SectionWrapper","section","Title","h2","Section","title","List","ul","ListItem","li","Button","button","ContactList","contacts","onDeleteContact","map","id","name","number","key","type","onClick","Form","form","Label","label","Input","input","ContactForm","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","this","onSubmit","onChange","disabled","Component","Filter","onChangeFilter","App","filter","addContact","contact","uuid","findContact","find","alert","prevState","deleteContact","contactId","changeFilter","getVisibleContacts","toLowerCase","includes","existingContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d6ce1cf5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst Container = styled.div`\r\n  max-width: 1170px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding-left: 12px;\r\n  padding-right: 12px;\r\n`;\r\nconst Layout = ({ children }) => <Container>{children}</Container>;\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nconst SectionWrapper = styled.section`\r\n  margin: 3rem 0;\r\n`;\r\nconst Title = styled.h2`\r\n  font-size: 3.6rem;\r\n  font-weight: 900;\r\n  margin-bottom: 2rem;\r\n`;\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <SectionWrapper>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </SectionWrapper>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nconst List = styled.ul`\r\n  max-width: 50rem;\r\n`;\r\nconst ListItem = styled.li`\r\n  display: flex;\r\n  align-self: center;\r\n  justify-content: space-between;\r\n  font-size: 1.8rem;\r\n  margin-bottom: 1rem;\r\n  &:last-of-type {\r\n    margin-bottom: none;\r\n  }\r\n`;\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  right: 0;\r\n  padding: 0.2rem 2rem;\r\n  border-radius: 1rem;\r\n  background-color: #ffffff;\r\n  &:active {\r\n    background-color: blue;\r\n    color: snow;\r\n    border-color: black;\r\n    outline: none;\r\n  }\r\n`;\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <List>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ListItem key={id}>\r\n        <p>\r\n          {name}: {number}\r\n        </p>\r\n        <Button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </Button>\r\n      </ListItem>\r\n    ))}\r\n  </List>\r\n);\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired\r\n      })\r\n    ),\r\n    PropTypes.array\r\n  ])\r\n};\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 50rem;\r\n`;\r\nconst Label = styled.label`\r\n  font-size: 1.8rem;\r\n`;\r\nconst Input = styled.input`\r\n  font-size: 1.8rem;\r\n  width: 25rem;\r\n  margin-bottom: 2rem;\r\n  margin-left: 1rem;\r\n  padding: 0.1rem 0.5rem;\r\n  border-radius: 0.5rem;\r\n`;\r\nconst Button = styled.button`\r\n  display: block;\r\n  font-size: 1.8rem;\r\n  margin: 0 auto;\r\n  max-width: 20rem;\r\n  padding: 1rem 5rem;\r\n  border-radius: 1rem;\r\n  background-color: #ffffff;\r\n  &:active {\r\n    background-color: blue;\r\n    color: snow;\r\n    border-color: black;\r\n    outline: none;\r\n  }\r\n`;\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onAddContact(name, number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label>\r\n          Name:\r\n          <Input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Phone:\r\n          <Input\r\n            type=\"text\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n          />\r\n        </Label>\r\n        <Button type=\"submit\" disabled={!name || !number}>\r\n          Add contact\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst Input = styled.input`\r\n  font-size: 1.8rem;\r\n  width: 25rem;\r\n  margin-bottom: 2rem;\r\n  margin-left: 1rem;\r\n  padding: 0.1rem 0.5rem;\r\n  border-radius: 0.5rem;\r\n`;\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <Input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={e => onChangeFilter(e.target.value)}\r\n    />\r\n  );\r\n}\r\n","// COMPONENTS\r\nimport React, { Component } from \"react\";\r\nimport Layout from \"./Layout/Layout\";\r\nimport Section from \"./Section/Section\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport Filter from \"./Filter/Filter\";\r\n// UTILS\r\nimport { uuid } from \"uuidv4\";\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\r\n    ],\r\n    filter: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const existingContacts = localStorage.getItem(\"contacts\");\r\n    if (existingContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(existingContacts)\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = (name, number) => {\r\n    const contact = {\r\n      id: uuid(),\r\n      name,\r\n      number\r\n    };\r\n\r\n    const findContact = this.state.contacts.find(\r\n      contact => contact.name === name\r\n    );\r\n\r\n    if (findContact) {\r\n      alert(`${findContact.name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, contact]\r\n    }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId)\r\n    }));\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <Layout>\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm onAddContact={this.addContact}></ContactForm>\r\n        </Section>\r\n        {contacts.length > 0 && (\r\n          <Section title=\"Contacts\">\r\n            {contacts.length > 2 && (\r\n              <Filter\r\n                value={filter}\r\n                onChangeFilter={this.changeFilter}\r\n              ></Filter>\r\n            )}\r\n\r\n            <ContactList\r\n              contacts={visibleContacts}\r\n              onDeleteContact={this.deleteContact}\r\n            ></ContactList>\r\n          </Section>\r\n        )}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./component/App\";\n\nimport \"./base.css\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}